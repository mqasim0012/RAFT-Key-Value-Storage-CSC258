package org.ur.raftimpl;

import com.google.common.collect.Lists;
import io.grpc.stub.StreamObserver;

import org.ur.comms.GreeterGrpc;
import org.ur.comms.HelloRequest;
import org.ur.comms.HelloResponse;

import java.util.List;
import java.util.stream.IntStream;

import static java.lang.String.format;


/**
 * The service generated by proto, and its functions are implemented here
 */
class GreeterImpl extends GreeterGrpc.GreeterImplBase {
    // Declare your variables here!!
    int i = 5;

    @Override
    public void sayHello(HelloRequest request, StreamObserver<HelloResponse> responseObserver) {
        HelloResponse reply = HelloResponse.newBuilder()
                .setText("Hello " + request.getText())
                .build();
        responseObserver.onNext(reply);
        responseObserver.onCompleted();
    }

    @Override
    public StreamObserver<HelloRequest> sayHelloWithManyRequests(StreamObserver<HelloResponse> responseObserver) {
        return
                new StreamObserver<HelloRequest>() {
                    final List<String> names = Lists.newArrayList();

                    @Override
                    public void onNext(HelloRequest request) {
                        names.add(request.getText());
                    }

                    @Override
                    public void onError(Throwable t) {
                        System.out.println("Encountered error in sayHelloWithManyRequests()");
                        t.printStackTrace();
                    }

                    @Override
                    public void onCompleted() {
                        HelloResponse msg = HelloResponse.newBuilder()
                                .setText("Hello " + String.join(", ", names))
                                .build();
                        responseObserver.onNext(msg);
                        responseObserver.onCompleted();
                    }
                };
    }


    @Override
    public void sayHelloWithManyReplies(HelloRequest request, StreamObserver<HelloResponse> responseObserver) {
        IntStream.range(0, 5)
                .forEach((i) -> {
                    HelloResponse reply = HelloResponse.newBuilder()
                            .setText(format("Hello %s [%d]", request.getText(), i))
                            .build();
                    responseObserver.onNext(reply);
                });

        responseObserver.onCompleted();
    }

    @Override
    public StreamObserver<HelloRequest> sayHelloWithManyRequestsAndReplies(StreamObserver<HelloResponse> responseObserver) {
        return
                new StreamObserver<HelloRequest>() {
                    @Override
                    public void onNext(HelloRequest request) {
                        IntStream.range(0, 5)
                                .forEach((i) -> {
                                    HelloResponse reply = HelloResponse.newBuilder()
                                            .setText(format("Hello %s [%d]", request.getText(), i))
                                            .build();
                                    responseObserver.onNext(reply);
                                });
                    }

                    @Override
                    public void onError(Throwable t) {
                        System.out.println("Encountered error in sayHelloWithManyRequestsAndReplies()");
                        t.printStackTrace();
                    }

                    @Override
                    public void onCompleted() {
                        responseObserver.onCompleted();
                    }
                };
    }

}
